version: 2

jobs:
  integration_tests:
    working_directory: /go/src/github.com/gaia-pipeline/gaia
    docker:
      - image: circleci/golang:1.10.3-browsers
    steps:
      - checkout
      #- run:
      #    name: Run integration tests
      #    command: go test -race -p 1 ./...
      - run:
          name: Build binary without frontend
          command: |
            make compile_backend
            ./gaia-linux-amd64 --version
  compile:
    working_directory: /go/src/github.com/gaia-pipeline/gaia
    docker:
      - image: circleci/golang:1.10.3-browsers
    steps:
      - checkout
      - run:
          name: Install nvm, node, and npm
          command: |
            wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            touch $HOME/.nvmrc
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
      - run:
          name: Compile frontend and final binary
          command: |
            cd frontend
            nvm install v10.5.0
            npm cache clean --force
            cd ..
            make release
      - store_artifacts:
          path: gaia-linux-amd64
  build_and_release_job:
    working_directory: /go/src/github.com/gaia-pipeline/gaia
    docker:
      - image: circleci/golang:1.10.3-browsers
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: install nvm, node, and npm
          command: |
            wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash
            echo 'export NVM_DIR=$HOME/.nvm' >> $BASH_ENV
            touch $HOME/.nvmrc
            echo 'source $NVM_DIR/nvm.sh' >> $BASH_ENV
      - run:
          name: install goreleaser
          command: |
            wget https://github.com/goreleaser/goreleaser/releases/download/v0.79.0/goreleaser_Linux_x86_64.tar.gz
            tar -zxvf goreleaser_Linux_x86_64.tar.gz goreleaser -C /usr/bin/
      - run:
          name: install docker client and login
          command: |
            set -x
            VER="17.12.1-ce"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
            docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: build and release
          command: |
            goreleaser

workflows:
  version: 2
  test_and_compile:
    jobs:
      - integration_tests
      - compile
  build_and_release:
    jobs:
      - build_and_release_job:
          filters:
            tags:
              only: /^v.*/
            branches:
              only: master